name: neomutt
base: core20
adopt-info: neomutt
summary: NeoMutt is a command line mail reader (or MUA)
description: |
  Command line mail reader based on Mutt, with added features.
 
  Neomutt supports all the features that are supported by Mutt, including
  `POP` and `IMAP` support, `SSL` encryption and `SASL` authentication,
  threading and `GPG` support.
 
  In addition, the neomutt snap provides:
  * Notmuch: a mail indexing tools that provides advanced features such as
    full-text search, thread reconstruction and added features.
  * Color attachment headers using regex, just like mail bodies.
  * Custom rules for theming the mail index.
  * NNTP support.
  * Visual progress bar for slow operations.
  * Trash folder.
  * Google's `oauth2.py` script (https://github.com/google/gmail-oauth2-tools), see
    https://neomutt.org/guide/optionalfeatures#6-%C2%A0oauthbearer-and-xoauth2-support
    for usage details.
  * The `w3m`, `lynx`, `links`, `links2`, and `elinks` text web browsers.

  The snap version of neomutt expects configuration files in

      ~/snap/neomutt/current

  The main configuration file, for example, has to be placed in

      ~/snap/neomutt/current/.neomuttrc

  Note that this directory is versioned and is backed up when the snap is
  removed (see https://snapcraft.io/docs/data-locations#heading--user).

  OAuth2 Support

  Follow the direction in
  https://neomutt.org/guide/optionalfeatures#6-%C2%A0oauthbearer-and-xoauth2-support
  or simply run

      neomutt.oauth2 --help

  to get instructions on how to create Client ID and Client Secrets. Create a
  refresh token,

      neomutt.oauth2 --generate_oauth2_token

  And add the following to the Neomutt configuration file,

      set imap_authenticators="oauthbearer"
      set imap_oauth_refresh_command="oauth2 --quiet \
        --user=[email_address] \
        --client_id=[client_id] \
        --client_secret=[client_secret] \
        --refresh_token=[refresh_token

  Note that within the Neomutt configuration file, the `oauth2` script can be
  called without specifying a path.
website: https://neomutt.org
contact: https://github.com/nicolasbock/neomutt-snap/issues
license: Apache-2.0
issues: https://github.com/nicolasbock/neomutt-snap/issues
source-code: https://github.com/nicolasbock/neomutt-snap
grade: stable
confinement: strict

apps:
  neomutt:
    command: usr/bin/neomutt
    plugs:
      - home
      - locale-control
      - network
  oauth2:
    command: bin/oauth2
    plugs:
      - network

parts:
  neomutt:
    after: [neomutt-test-files]
    plugin: dump
    source: https://github.com/neomutt/neomutt.git
    source-tag: '20220429'
    build-packages:
      - docbook-simple
      - docbook-xsl
      - gettext
      - libdb-dev
      - libgdbm-dev
      - libgnutls28-dev
      - libgpgme-dev
      - libgss-dev
      - libidn11-dev
      - libkrb5-dev
      - libkyotocabinet-dev
      - liblmdb-dev
      - liblua5.3-dev
      - libncurses-dev
      - libnotmuch-dev
      - libqdbm-dev
      - librocksdb-dev
      - libsasl2-dev
      - libtokyocabinet-dev
      - libxml2-utils
      - tcl
      - xsltproc
    override-pull: |
      snapcraftctl pull
      snapcraftctl set-version "$(git describe)"
    override-build: |
      set -e -u -x
      ./configure \
        --testing \
        --gpgme \
        --gnutls \
        --gss \
        --sasl \
        --ssl \
        --lua \
        --notmuch \
        --mixmaster \
        --bdb \
        --gdbm \
        --kyotocabinet \
        --lmdb \
        --qdbm \
        --disable-idn \
        --idn2 \
        --tokyocabinet \
        --rocksdb \
        --prefix=/usr
      make
      NEOMUTT_TEST_DIR="$(readlink --canonicalize ${SNAPCRAFT_PART_BUILD}/../../neomutt-test-files/build)" \
        make test
      make install DESTDIR=${SNAPCRAFT_PART_INSTALL}
    stage-packages:
      - libassuan0
      - libgdbm6
      - libgmime-3.0-0
      - libgpgme11
      - libidn11
      - libkyotocabinet16v5
      - liblmdb0
      - liblua5.3-0
      - libnotmuch5
      - libqdbm14
      - libtalloc2
      - libtokyocabinet9
      - libxapian30
  neomutt-support:
    plugin: nil
    stage-packages:
      - elinks
      - links
      - links2
      - lynx
      - neovim
      - nvi
      - vim
      - w3m
  neomutt-test-files:
    plugin: dump
    source: https://github.com/neomutt/neomutt-test-files.git
    source-commit: 'dc9fb32a701eb9dce4fda93c27da1d9b5be23231'
    override-build: |
      set -e -u -x
      export NEOMUTT_TEST_DIR="${SNAPCRAFT_PART_BUILD}/build"
      ./setup.sh
  google-oauth-scripts:
    after:
      - google-oauth-scripts-patches
    plugin: python
    source: https://github.com/google/gmail-oauth2-tools.git
    source-commit: 'e3229155a4037267ce40f1a3a681f53221aa4d8d'
    override-build: |
      set -e -u -x
      PATCHES=$(readlink --canonicalize ${SNAPCRAFT_PART_BUILD}/../../google-oauth-scripts-patches/build)
      for patch in ${PATCHES}/*.patch; do
        patch -p1 < ${patch}
      done
      install --mode 0755 -D -T \
        python/oauth2.py \
        ${SNAPCRAFT_PART_INSTALL}/bin/oauth2
    stage:
      - bin/oauth2
  google-oauth-scripts-patches:
    plugin: dump
    source: patches
